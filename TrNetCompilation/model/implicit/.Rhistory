source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
View(costsData)
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
View(costsData)
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=costs)) +
geom_point(na.rm = FALSE) +
scale_y_continuous("Cost", labels = waiver()) +
scale_x_discrete("Decomposition", labels = waiver())
print(costsPlot)
View(costsData)
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
scale_y_continuous("Cost", labels = waiver()) +
scale_x_discrete("Decomposition", labels = waiver())
print(costsPlot)
dev.off()
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE)
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
scale_y_log10()
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
scale_y_log10(limits=c(0, 1E07))
print(costsPlot)
dev.off()
1E07
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
scale_y_log10(limits=c(NA, 1E07))
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
scale_y_log10(limits=c(NA, 1E06))
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
scale_y_continuous(limits=c(NA, 1E06))
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
scale_y_continuous(limits=c(NA, 4E05))
print(costsPlot)
dev.off()
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
source('C:/Users/clagms/Source Control/Assembla/TrNetCompilation/model/implicit/plotCosts.r')
median(costsData$cost)
min(costsData$cost)
max(costsData$cost)
executableCostsData <- costsData[costsData$cost < 350000, ]
View(executableCostsData)
interestingCostsData <- interestingCostsData[interestingCostsData$cost > 300000, ]
interestingCostsData <- costsData[costsData$cost < 350000, ]
interestingCostsData <- interestingCostsData[interestingCostsData$cost > 300000, ]
View(interestingCostsData)
interestingCost <- interestingCostsData[interestingCostsData$cost == max(interestingCostsData$cost), ]
View(interestingCost)
interestingCost
interestingCost[0, ]
interestingCost[1, ]
costsData = read.csv("./explicit_decompositions_costs.csv")
counter <- 0
costsData$i <- sapply(1:nrow(costsData), function(i){
i
})
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_log10()
print(costsPlot)
dev.off()
library(ggplot2)
library(cowplot)
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_log10()
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_log10() +
theme(axis.text=element_text(size=12, face="bold"))
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_log10() +
theme(axis.text=element_text(size=14, face="bold"))
print(costsPlot)
dev.off()
pdf("plots.pdf")
costsPlot <- ggplot(data=costsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_log10() +
theme(axis.text=element_text(size=20, face="bold"))
print(costsPlot)
dev.off()
interestingCostsData <- costsData
interestingCostsData <- costsData[costsData$cost < 1e07, ]
#interestingCostsData <- interestingCostsData[interestingCostsData$cost > 300000, ]
#interestingCost <- interestingCostsData[interestingCostsData$cost == max(interestingCostsData$cost), ]
#interestingCost[1, ]
pdf("plots_full.pdf")
costsPlot <- ggplot(data=interestingCostsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_log10() +
theme(axis.text=element_text(size=20, face="bold"))
print(costsPlot)
dev.off()
interestingCostsData <- costsData
interestingCostsData <- costsData[costsData$cost < 1e07, ]
#interestingCostsData <- interestingCostsData[interestingCostsData$cost > 300000, ]
#interestingCost <- interestingCostsData[interestingCostsData$cost == max(interestingCostsData$cost), ]
#interestingCost[1, ]
pdf("plots_zoomed.pdf")
costsPlot <- ggplot(data=interestingCostsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_log10() +
theme(axis.text=element_text(size=20, face="bold"))
print(costsPlot)
dev.off()
pdf("plots_zoomed.pdf")
costsPlot <- ggplot(data=interestingCostsData , aes(x=i, y=cost)) +
geom_point(na.rm = FALSE) +
#scale_y_continuous(limits=c(NA, 4E05))
scale_y_continuous() +
theme(axis.text=element_text(size=20, face="bold"))
print(costsPlot)
dev.off()
max(costsData$cost)
min(costsData$cost)
median(costsData$cost)
800000000
1.25189864E8
median(costsData$cost)
